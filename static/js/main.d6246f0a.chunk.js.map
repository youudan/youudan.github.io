{"version":3,"sources":["img/wijdan.jpg","components/Home/Hero.js","components/Home/About.js","components/Home/PortfolioItem.js","components/Home/Portfolio.js","components/Home/Contact.js","components/Footer.js","views/Home.js","views/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hero","Jumbotron","className","Container","to","spy","smooth","duration","About","props","name","Row","Col","xs","md","src","img","alt","style","padding","Button","variant","PortfolioItem","sm","lg","project","title","description","Image","thumbnail","fluid","Portfolio","id","Contact","size","onClick","window","location","href","email","Footer","date","Date","icon","faChevronUp","Scrol","scrollToTop","faLinkedinIn","faGithub","getFullYear","credits","Home","Wijdan","NotFound","Users","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d6246f0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wijdan.fc7d77de.jpg\";","import React from 'react';\nimport { Link } from 'react-scroll';\nimport { Jumbotron, Container } from 'react-bootstrap';\nfunction Hero() {\n  return (\n    <Jumbotron className='bg-transparent hero'>\n      <Container>\n        <h1 className='hero-title'>\n          Hi, my name is <span className='text-primary'>Wijdan</span>\n          <br />\n          I'm the Web Developer.\n          <br />\n        </h1>\n        <p className='hero-cta'>\n          <Link className='btn btn-outline-primary btn-lg' to='about' spy={true} smooth={true} duration={500}>\n            Know more\n          </Link>\n        </p>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Hero;\n","import React from 'react';\nimport { Element } from 'react-scroll';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nfunction About(props) {\n  return (\n    <Element name='about' className='bg-about pt-5 pb-5'>\n      <Container className='about text-center text-white'>\n        <h1 className='section-title'>About me</h1>\n        <Row className=' pt-5 pb-5'>\n          <Col xs={12} md={6} className=''>\n            <img src={props.img} alt='' />\n          </Col>\n          <Col xs={12} md={6} className='text-left mt-3' style={{ padding: '0 2rem' }}>\n            <p>I am a Web Developer with enthusiasm and focus on Fullstack Development.</p>\n            <p>\n              I am passionate about building scalable software, creating effective solutions, and learning every day to\n              grow professionally in the IT field.\n            </p>\n            <p>Feel free to contact me via email at any time</p>\n\n            <Button variant='outline-light'>View Resume</Button>\n          </Col>\n        </Row>\n      </Container>\n    </Element>\n  );\n}\n\nexport default About;\n","import React, { Fragment } from 'react';\nimport { Row, Col, Button, Image } from 'react-bootstrap';\n\nconst PortfolioItem = (props) => {\n  return (\n    <Fragment>\n      <Row className='portfolio-item mb-5'>\n        <Col sm={12} lg={6} className='text-left mt-4 pb-4 pl-3' style={{ padding: '0 2rem' }}>\n          <h3>{props.project.title}</h3>\n          <p>{props.project.description}</p>\n\n          <Button variant='outline-primary'>See Live</Button>\n        </Col>\n        <Col sm={12} lg={6} className=''>\n          <Image src={props.project.thumbnail} fluid />\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default PortfolioItem;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport PortfolioItem from './PortfolioItem';\n\nfunction Portfolio() {\n  const project = {\n    title: 'Lorem ipsum',\n    description:\n      'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quas sed ipsam laborum commodi deserunt necessitatibus iste, dolores sapiente fuga quam, aperiam consequatur ut neque temporibus doloribus modi! Nihil, adipisci molestias!',\n    thumbnail: 'https://simplfolio.netlify.app/assets/project.5ad6096036391d70f3f8cdadc5937cf4.jpg'\n  };\n  return (\n    <div id='portfolio' className='pt-5'>\n      <Container className='text-center'>\n        <h1 className='section-title'>Portfolio</h1>\n        <div className='mt-5'>\n          <PortfolioItem project={project} />\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default Portfolio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Button } from 'react-bootstrap';\n\nconst Contact = (props) => {\n  const openEmail = () => {\n    return (window.location.href = `mailto:${props.email}`);\n  };\n\n  return (\n    <div className='bg-contact pt-5 pb-5'>\n      <Container className='text-center text-white'>\n        <h1 className='section-title'>Contact</h1>\n        <p>Would you like to work with me? Awesome!</p>\n        <Button variant='outline-light' size='lg' onClick={openEmail}>\n          Lets build together!\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  email: PropTypes.string.isRequired\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { animateScroll as Scrol } from 'react-scroll';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport { faLinkedinIn, faGithub } from '@fortawesome/free-brands-svg-icons';\nconst Footer = (props) => {\n  const date = new Date();\n\n  const scrollToTop = () => {\n    Scrol.scrollToTop();\n  };\n  return (\n    <div className='footer'>\n      <FontAwesomeIcon icon={faChevronUp} onClick={scrollToTop} className='mb-4' />\n      <br />\n      <FontAwesomeIcon icon={faLinkedinIn} size='lg' className='icon' />\n      <FontAwesomeIcon icon={faGithub} size='lg' className='icon' />\n\n      <p className='credits mt-4'>&copy; {`${date.getFullYear()} - ${props.credits}`}</p>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  credits: PropTypes.string.isRequired\n};\n\nexport default Footer;\n","import React, { Fragment } from 'react';\nimport Wijdan from '../img/wijdan.jpg';\nimport Hero from '../components/Home/Hero';\nimport About from '../components/Home/About';\nimport Portfolio from '../components/Home/Portfolio';\nimport Contact from '../components/Home/Contact';\nimport Footer from '../components/Footer';\n\nconst Home = () => {\n  return (\n    <Fragment>\n      {/* Hero */}\n      <Hero />\n      {/* About me */}\n      <About img={Wijdan} />\n      {/* Portfolio */}\n      <Portfolio />\n      {/* Contact */}\n      <Contact email='wijdan.m.ridwanulloh@gmail.com' />\n      {/* Footer */}\n      <Footer credits='Wijdan Muhammad R / YouuDan / Niki' />\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nfunction NotFound() {\n  return (\n    <div className='hero'>\n      <Container>\n        <div className='hero-title text-center'>\n          <h1 className=''>404</h1>\n          <Link to='/' className='btn btn-primary text-light'>\n            Back to home\n          </Link>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport { Button } from 'react-bootstrap';\nimport Home from './views/Home';\nimport NotFound from './views/NotFound';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/about' component={About} />\n          <Route path='/users' component={Users} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}